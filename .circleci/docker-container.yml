version: 2.1

parameters:
  gh_pat:
    type: string
  gh_pat_treehouse:
    type: string
  copybara_tag:
    type: string
    default: "v20250818"

jobs:
  check-connection:
    machine: true
    resource_class: org-test-copybara/test
    environment:
      CONTAINER_IMAGE: "circleci-container:latest" # tu imagen ya presente en el runner
      COPYBARA_TAG: << pipeline.parameters.copybara_tag >>
      GH_PAT: << pipeline.parameters.gh_pat >>
      GH_PAT_TREEHOUSE: << pipeline.parameters.gh_pat_treehouse >>
    steps:
      - checkout
      - run:
          name: Check GitHub Cloud (in-container)
          command: |
            docker run --rm \
              -e GH_PAT -e COPYBARA_TAG \
              -v "$PWD":/workspace -w /workspace \
              "$CONTAINER_IMAGE" bash -lc '
                set -euo pipefail
                URL="https://api.github.com/repos/julimax/copybara2"
                code=$(curl -sS -D /tmp/h -o /tmp/b -w "%{http_code}" \
                  -H "Authorization: Bearer ${GH_PAT}" \
                  -H "Accept: application/vnd.github+json" "$URL")
                echo "== Headers =="; cat /tmp/h
                echo "== Body =="; (jq . /tmp/b || cat /tmp/b)
                echo "HTTP $code"
                test "${code:0:1}" = "2"
              '
      - run:
          name: Check GitHub Enterprise (in-container)
          command: |
            docker run --rm \
              -e GH_PAT-e COPYBARA_TAG \
              -v "$PWD":/workspace -w /workspace \
              "$CONTAINER_IMAGE" bash -lc '
                set -euo pipefail
                URL="https://api.github.com/repos/julimax/copybara2"
                code=$(curl -sS --connect-timeout 5 --max-time 15 --retry 3 --retry-delay 2 --retry-all-errors \
                  -D /tmp/h -o /tmp/b -w "%{http_code}" \
                  -H "Authorization: Bearer ${GH_PAT}" \
                  -H "Accept: application/vnd.github+json" "$URL")
                echo "== Headers =="; cat /tmp/h
                echo "== Body =="; (jq . /tmp/b || cat /tmp/b)
                echo "HTTP $code"
                test "${code:0:1}" = "2"
              '

  sync:
    machine: true
    resource_class: org-test-copybara/test
    environment:
      CONTAINER_IMAGE: "circleci-container:latest"
      COPYBARA_TAG: << pipeline.parameters.copybara_tag >>
    steps:
      - checkout
      - run:
          name: Run Copybara (in-container)
          command: |
            docker run --rm \
              -e COPYBARA_TAG \
              -v "$PWD":/workspace -w /workspace \
              "$CONTAINER_IMAGE" bash -lc '
                set -euo pipefail
                # Primera vez agrega: --init-history si corresponde
                copybara .circleci/copybara/copy.bara.sky sync_to_dest
              '

workflows:
  build-workflow:
    jobs:
      - check-connection
      - sync:
          requires:
            - check-connection
