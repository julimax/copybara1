# Repo B â€” .circleci/config.yml
version: 2.1

parameters:
  message:
    type: string
    default: "Hello World"

jobs:
  print:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Who triggered me?
          command: |
            sudo apt-get update -y && sudo apt-get install -y jq
            curl -sS -H "Circle-Token: ${CIRCLE_TOKEN}" \
              "https://circleci.com/api/v2/pipeline/${CIRCLE_PIPELINE_ID}" \
            | jq -r '"actor=\(.trigger.actor.login) type=\(.trigger.type) created_at=\(.created_at)"'
      - run:
          name: Print message
          command: echo "<< pipeline.parameters.message >>"
          
      - run:
          name: Print Logs
          command: |
            # 1) Get latest pipeline id of A
            echo "get pipeline id"
            PIPE_ID=$(curl -s -H "Circle-Token: $CIRCLE_TOKEN" \
              "https://circleci.com/api/v2/project/circleci/2d9dcac2-9735-4929-b3d2-bb133465bc4d/55d9b29f-731e-40df-8c77-170ec5493e4b/pipeline?branch=main" \
              | jq -r '.items[0].id')
            
            # 2) Get workflow id
            echo "get workflow id"
            WF_ID=$(curl -s -H "Circle-Token: $CIRCLE_TOKEN" \
              "https://circleci.com/api/v2/pipeline/$PIPE_ID/workflow" \
              | jq -r '.items[0].id')
            
            # 3) Get job number
            echo "get job id"
            JOB_NUM=$(curl -s -H "Circle-Token: $CIRCLE_TOKEN" \
              "https://circleci.com/api/v2/workflow/$WF_ID/job" \
              | jq -r '.items[0].job_number')
            
            # 4) Show available step names (to verify the exact string)
            echo "available steps:"
            curl -s -H "Circle-Token: $CIRCLE_TOKEN" \
              "https://circleci.com/api/v1.1/project/github/julimax/copybara1/$JOB_NUM" \
            | jq -r '.steps[].name'
            
            # 5) Pick the step by a case-insensitive match and get its output_url
            STEP_PATTERN="Previous echo"  # <- change this to a substring you see above
            OUTPUT_URL=$(curl -s -H "Circle-Token: $CIRCLE_TOKEN" \
              "https://circleci.com/api/v1.1/project/github/julimax/copybara1/$JOB_NUM" \
            | jq -r --arg pat "$STEP_PATTERN" '
                .steps[]
                | select(.name | test($pat; "i"))
                | .actions[] | select(.output_url != null) | .output_url
              ' | head -n1)
            
            # 6) Print the log (avoid jq null error)
            if [ -z "$OUTPUT_URL" ]; then
              echo "No step matched pattern: $STEP_PATTERN"
              exit 0
            fi
            
            curl -s -H "Circle-Token: $CIRCLE_TOKEN" "$OUTPUT_URL" \
              | jq -r '.[].message // .[].out // empty'



workflows:
  example:
    jobs:
      - print
